version: 2.1

workflows:
  build_and_deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      # - test-python-install:
      #     version: "3.4"
      #     requires:
      #       - build
      # - test-python-install:
      #     version: "3.5"
      #     requires:
      #       - build
      # - test-python-install:
      #     version: "3.6"
      #     requires:
      #       - build
      # - test-python-install:
      #     version: "3.7"
      #     requires:
      #       - build
      - deploy:
          requires:
            - build
          # filters:
          #   tags:
          #     only: /[0-9]+(\.[0-9]+)*/
          #   branches:
          #     ignore: /.*/
jobs:
  build:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - restore_cache:
          key: v1-dependency-cache-{{ checksum "setup.py" }}-{{ checksum "Makefile" }}
      - run:
          name: import GPG key
          command: |
            export GPG_TTY=$(tty)
            echo -e "$GPG_KEY" | gpg --import --no-tty --batch --yes --passphrase "${GPG_PASSWORD}"
      - run:
          name: install python dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make pip-install-dev
      - run:
          name: create packages
          command: |
            make package
      - run:
          name: sign packages
          command: |
            gpg --no-tty --batch --pinentry-mode loopback --armor --sign --local-user ${GPG_FINGERPRINT} --passphrase "${GPG_PASSWORD}" --detach-sign dist/gradient-*.*.*.tar.gz
            ls ./dist
      - save_cache:
          key: v1-dependency-cache-{{ checksum "setup.py" }}-{{ checksum "Makefile" }}
          paths:
            - "venv"
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            make run-tests           
      - store_artifacts:
          path: htmlcov/
  test-python-install:
    parameters:
      version:
        type: string
        default: latest
    docker:
      - image: circleci/python:<< parameters.version >>
    steps:
      - checkout
      - restore_cache:
          key: v1-dependency-cache-{{ checksum "setup.py" }}-{{ checksum "Makefile" }}
      - run:
          name: install python dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make pip-install-dev
      - save_cache:
          key: v1-dependency-cache-{{ checksum "setup.py" }}-{{ checksum "Makefile" }}
          paths:
            - "venv"
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            make run-tests
      - store_artifacts:
          path: htmlcov/
      - run:
          name: Smoke Test Install 
          command: |
            python --version
            sudo pip3 install gradient
  integration:
    docker:
      - image: circleci/python:3.6
    steps:
      - run: echo "It works!"
      - run: echo $RUN_EXTRA_TESTS
  deploy:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - restore_cache:
          key: v1-dependency-cache-{{ checksum "setup.py" }}-{{ checksum "Makefile" }}
      - run:
          name: install python dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make pip-install-dev
      - save_cache:
          key: v1-dependency-cache-{{ checksum "setup.py" }}-{{ checksum "Makefile" }}
          paths:
            - "venv"
      - run:
          name: import GPG key
          command: |
            export GPG_TTY=$(tty)
            echo -e "$GPG_KEY" | gpg --import --no-tty --batch --yes --passphrase "${GPG_PASSWORD}"
            gpg --list-options show-unusable-subkeys --list-keys
      # - run:
      #     name: verify git tag vs. version
      #     command: |
      #       python3 -m venv venv
      #       . venv/bin/activate
      #       python setup.py verify
      # - run:
      #     name: init .pypirc
      #     command: |
      #       echo -e "[pypi]" >> ~/.pypirc
      #       echo -e "username = $TESTPYPI_USERNAME" >> ~/.pypirc
      #       echo -e "password = $TESTPYPI_PASSWORD" >> ~/.pypirc
      - run:
          name: create packages
          command: |
            make package
      - run:
          name: sign packages
          command: |
            gpg --no-tty --batch --pinentry-mode loopback --armor --sign --local-user ${GPG_FINGERPRINT} --passphrase "${GPG_PASSWORD}" --detach-sign dist/gradient-*.*.*.tar.gz
      - run:
          name: upload to testpypi
          command: |
            . venv/bin/activate
            twine upload -u $TESTPYPI_USERNAME -p $TESTPYPI_PASSWORD --repository testpypi dist/*
      - run:
          name: verify gradient package can be installed and works
          command: |
            pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple gradient
            gradient --version
